<?xml version="1.0" encoding="UTF-8"?>
<project name="" basedir="." default="...">




    <!-- ==================================== -->
    <!--              Properties              -->
    <!-- ==================================== -->




    <!-- Override memory limit -->

    <php expression="ini_set('memory_limit', '-1');" level="verbose" />

    <!-- Base property values -->

    <property name="paths.properties" value="${build.path}/.env" />
    <property name="db.data_path" value="${build.path}/database" />
    <property name="amazon.key" value="${s3.key}" />
    <property name="amazon.secret" value="${s3.secret}" />

    <!-- Load the PDOSQLEXEC task -->

    <taskdef name="pdosqlexec" classname="phing.tasks.ext.pdo.PDOSQLExecTask" />




    <!-- ==================================== -->
    <!--                Tasks                 -->
    <!-- ==================================== -->




    <!--
        These tasks aren't used in Laravel projects
    -->

    <target name="build:save_config" hidden="true">
        <echo msg="Not used in this project" />
    </target>


    <target name="build:config" hidden="true">
        <echo msg="Not used in this project" />
    </target>

    <target name="project:config" hidden="true">
        <echo msg="Not used in this project" />
    </target>


    <target name="build" hidden="true">
        <echo msg="Not used in this project" />
    </target>


    <target name="build:housekeeping" hidden="true">
        <echo msg="Not used in this project" />
    </target>


    <!--
        Drops the MySQL database
    -->

    <target name="db:drop" description="Drop the database">
        <pdosqlexec url="mysql:host=${DB_HOST};port=${DB_PORT};" userid="${DB_ROOT_USERNAME}" password="${DB_ROOT_PASSWORD}">
            DROP DATABASE if exists ${DB_DATABASE};
        </pdosqlexec>

        <echo msg="Database dropped!" />
    </target>


    <!--
        Create the MySQL database and user, including privileges
    -->

    <target name="db:create" depends="db:drop" description="Create the MySQL database and user, including privileges">
        <pdosqlexec url="mysql:host=${DB_HOST};port=${DB_PORT};" userid="${DB_ROOT_USERNAME}" password="${DB_ROOT_PASSWORD}">
            CREATE DATABASE IF NOT EXISTS ${DB_DATABASE} CHARACTER SET utf8;
            GRANT all ON ${DB_DATABASE}.* TO '${DB_USERNAME}'@'${DB_HOST}' IDENTIFIED BY '${DB_PASSWORD}';
            FLUSH PRIVILEGES;
        </pdosqlexec>

        <echo msg="Database created!" />
    </target>


    <!--
        Clear out the MySQL database
    -->

    <target name="db:data:empty" description="Clear out the MySQL database">
        <pdosqlexec url="mysql:host=${DB_HOST};dbname=${DB_DATABASE};port=${DB_PORT};" userid="${DB_USERNAME}" password="${DB_PASSWORD}">
            SELECT CONCAT('SET FOREIGN_KEY_CHECKS = 0;TRUNCATE TABLE ',table_name, ';SET FOREIGN_KEY_CHECKS = 1;') FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = DATABASE();
            <formatter type="plain" outfile="${db.data_path}/truncate.sql" showheaders="false" coldelim="" />
        </pdosqlexec>

        <pdosqlexec url="mysql:host=${DB_HOST};dbname=${DB_DATABASE};port=${DB_PORT};" userid="${DB_USERNAME}" password="${DB_PASSWORD}" src="${db.data_path}/truncate.sql" />

        <delete file="${db.data_path}/truncate.sql" />
    </target>


    <!--
        Dump MySQL database data for the current migration
    -->

    <target name="db:data:dump" depends="db:current_migration" description="Dump MySQL database data for the current migration">
        <echo msg="MySQL dump data into ${db.data_path}/${db.current_migration}_data.sql" />

        <exec command="mysqldump -cQ --complete-insert --extended-insert=0 --no-create-info --skip-comments --add-drop-table=false --no-create-db=true -u${DB_USERNAME} -p${DB_PASSWORD} -h${DB_HOST} -P${DB_PORT} ${DB_DATABASE} > ${db.data_path}/${db.current_migration}_data.sql" />
    </target>


    <!--
        Upload MySQL database data for the current migration to S3
    -->

    <target name="db:data:commit" depends="db:current_migration" description="Upload MySQL database data for the current migration to S3">
        <echo msg="Gzipping data..." />
        <exec command="gzip ${db.data_path}/${db.current_migration}_data.sql" />
        <echo msg="...done" />

        <echo msg="Pushing data..." />
        <s3put
            createBuckets="true"
            bucket="database.${project.name}.3ev.me"
            object="${db.current_migration}_data.sql.gz"
            source="${db.data_path}/${db.current_migration}_data.sql.gz" />
        <echo msg="...done" />

        <echo msg="Cleaning up..." />
        <exec command="rm ${db.data_path}/${db.current_migration}_data.sql.gz" />
        <echo msg="...done" />
    </target>


    <!--
        Empty MySQL database and reload data for the current migration
    -->

    <target name="db:data:load" depends="db:data:empty, db:current_migration" description="Empty MySQL database and reload data for the current migration">
        <exec command="mysql -u${DB_USERNAME} -p${DB_PASSWORD} -h${DB_HOST} -P${DB_PORT} ${DB_DATABASE} &lt; ${db.data_path}/${db.current_migration}_data.sql" escape="false" passthru="true" />
    </target>


    <!--
        Download MySQL database data for the current migration from S3
    -->

    <target name="db:data:update" depends="db:current_migration" description="Download MySQL database data for the current migration from S3">
        <echo msg="Pulling data from: database.${project.name}.3ev.me..." />
        <s3get
            bucket="database.${project.name}.3ev.me"
            object="${db.current_migration}_data.sql.gz"
            target="${db.data_path}/${db.current_migration}_data.sql.gz" />
        <echo msg="...done" />
        <echo msg="Unzipping data..." />
        <if>
            <available file="${db.data_path}/${db.current_migration}_data.sql" property="already_have_data" />
            <then>
                <delete file="${db.data_path}/${db.current_migration}_data.sql" />
            </then>
        </if>
        <exec command="gunzip ${db.data_path}/${db.current_migration}_data.sql.gz" />
        <echo msg="...done" />
    </target>


    <!--
        Show the current database migration
    -->

    <target name="db:current_migration" description="Show the current database migration">
        <exec command="LARAVEL_CUR_MIGRATION=`ls -r ${db.data_path}/migrations | head -n1` &amp;&amp; echo ${LARAVEL_CUR_MIGRATION%.*}" escape="false" outputProperty="db.current_migration" />
        <echo message="${db.current_migration}" />
    </target>


    <!--
        Run database migrations
    -->

    <target name="db:migrate" description="Run database migrations">
        <exec command="php artisan migrate" passthru="true" />
    </target>


    <!--
        Initialise the MySQL database
    -->

    <target name="db:init" depends="db:create, db:migrate, db:data:update, db:data:load" description="Initialise the MySQL database">
    </target>




</project>
